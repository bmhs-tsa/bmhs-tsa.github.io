<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reverse Engineering on BMHS TSA</title><link>https://bmhs-tsa.github.io/tags/reverse-engineering/</link><description>Recent content in Reverse Engineering on BMHS TSA</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 09 Apr 2021 16:06:11 -0600</lastBuildDate><atom:link href="https://bmhs-tsa.github.io/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>crackme-py</title><link>https://bmhs-tsa.github.io/post/crackme-py/</link><pubDate>Fri, 09 Apr 2021 16:06:11 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/crackme-py/</guid><description>Challenge Rating Artificialness: 5/10 Skill: 3/10 Time: 5-10 minutes Learn more about how we rate challenges here.
The CTF starts out by giving you a python file called crackme.py. When you run it, it just takes two numbers as input and outputs the largest. Not very helpful for finding flags, unless&amp;hellip;
How do we find the flag? When you open the file in any text editor, you&amp;rsquo;ll see that there&amp;rsquo;s more to this program than it seems.</description></item></channel></rss>
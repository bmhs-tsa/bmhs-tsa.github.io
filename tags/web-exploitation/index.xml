<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web Exploitation on BMHS TSA</title><link>https://bmhs-tsa.github.io/tags/web-exploitation/</link><description>Recent content in Web Exploitation on BMHS TSA</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Apr 2022 22:22:10 -0600</lastBuildDate><atom:link href="https://bmhs-tsa.github.io/tags/web-exploitation/index.xml" rel="self" type="application/rss+xml"/><item><title>Noted</title><link>https://bmhs-tsa.github.io/post/noted/</link><pubDate>Sat, 02 Apr 2022 22:22:10 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/noted/</guid><description>Challenge Rating Artificialness: 3/10 Skill: 8/10 Time: 2-3 days Learn more about how we rate challenges here.
Preface This write-up assumes you have a moderate to advanced understanding of SOP (Same-Origin Policy) and CORS (Cross-Origin Resource Sharing). If you don&amp;rsquo;t, you should check out MDN&amp;rsquo;s SOP and CORS articles. One other thing you should note (Pun intended) is that, despite what the challenge description says, the headless browser DOES have internet access.</description></item><item><title>X Marks the Spot</title><link>https://bmhs-tsa.github.io/post/x-marks-the-spot/</link><pubDate>Fri, 02 Apr 2021 23:39:19 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/x-marks-the-spot/</guid><description>Challenge Rating Artificialness: 3/10 Skill: 7/10 Time: 4-6 hours Learn more about how we rate challenges here.
Preface This write-up assumes you understand what an injection vulnerability is. If you don&amp;rsquo;t you, should check out Web Gauntlet 2.
What is XPath? XPath is the standard way of querying data from an XML document (Similar to SQL). There are a few basic things you need to know about XPath:</description></item><item><title>Web Gauntlet 3</title><link>https://bmhs-tsa.github.io/post/web-gauntlet-3/</link><pubDate>Wed, 31 Mar 2021 00:32:29 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/web-gauntlet-3/</guid><description>Challenge Rating Artificialness: 3/10 Skill: 6/10 Time: 30 minutes (Assuming you already solved Web Gauntlet 2) Learn more about how we rate challenges here.
Preface This is the followup challenge to Web Gauntlet 2 which itself is a followup to Web Gauntlet. This article assumes you&amp;rsquo;ve already solved Web Gauntlet 2.
What&amp;rsquo;s different? Not a whole lot - just the maximum user input length. Our previous exploit (admi'||CHAR(1540/LENGTH( and ))||') is 29 characters long.</description></item><item><title>Web Gauntlet 2</title><link>https://bmhs-tsa.github.io/post/web-gauntlet-2/</link><pubDate>Tue, 30 Mar 2021 23:26:46 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/web-gauntlet-2/</guid><description>Challenge Rating Artificialness: 3/10 Skill: 6/10 Time: 2-3 hours Learn more about how we rate challenges here.
Preface This is the followup challenge to Web Gauntlet.
What are SQL injections? SQL injections occur when a server improperly handles user input in such a way that the user can write SQL queries and run them on the server. For example, lets say we&amp;rsquo;re running a simple web server that performs a username/password lookup:</description></item><item><title>Get Ahead</title><link>https://bmhs-tsa.github.io/post/get-ahead/</link><pubDate>Tue, 30 Mar 2021 22:38:13 -0600</pubDate><guid>https://bmhs-tsa.github.io/post/get-ahead/</guid><description>Challenge Rating Artificialness: 5/10 Skill: 3/10 Time: 5 minutes Learn more about how we rate challenges here.
What are HTTP verbs? Normally when you access a website, your browser makes an HTTP request to GET content from the server. However, your browser isn&amp;rsquo;t always fetching data from a server, sometimes it POSTs data too (Such as when logging in to a website). HTTP verbs are the standardized method for telling the server what to do.</description></item></channel></rss>
[{"content":"Mod 26 This is a rot 13 cypher!\nWhat is ROT 13? ROT 13 is a cipher where every letter is rotated by 13 letters within the alphabet. It is a type of caesar cipher.\nHow can this be reversed? Rot 13 can be reversed the same way as it is encypted, by rotating the letters by thirteen charecters. In Python we can simply take the ASCII value of each letter (take out special charecters and numbers),and add thirteen, before using the modulo operator to loop backto the beginning of the alphabet.\nex = \u0026#39;cvpbPGSarkggvzrVyygelebhaqfbsebghyLicInt\u0026#39; letts = [] for i in range(len(ex)): letts.append(ex[i].lower()) letts[i] = (ord(letts[i]) - 97 + 13) % 26 letts[i] = chr(letts[i] + 97) print(letts) The output will look something like:\n[\u0026#39;p\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;n\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;x\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;m\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;i\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;n\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;s\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;f\u0026#39;, \u0026#39;r\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;t\u0026#39;, \u0026#39;u\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;y\u0026#39;, \u0026#39;v\u0026#39;, \u0026#39;p\u0026#39;, \u0026#39;v\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;g\u0026#39;] Manually add back special charecters and capitalization and you will have your flag.\nOnline Tools You can also use the following online tools to accomplish the same thing:\n dcode.fr/rot-13-cipher rot13.com cryptii.com/pipes/rot13-decoder  ","date":"2021-04-02T16:58:00-06:00","permalink":"https://bmhstsa.com/post/mod-13/","title":"Mod 13"},{"content":"Challenge Rating  Artificialness: 2/10 Skill: 2/10 Time: 3 minutes  Learn more about how we rate challenges here.\nWhat software do you need? Notepad or a text editor.\nWhat do you need to know in order to solve it? That nobody expects Notepad.\nWhat do you actually do? Open the file in Notepad and CTRL+F for picoCTF.\n","date":"2021-04-02T16:57:30-06:00","permalink":"https://bmhstsa.com/post/static-aint-always-noise/","title":"Static Aint Always Noise"},{"content":"Challenge Rating  Artificialness: 4/10 Skill: 3/10 Time: 5-10 minutes  Learn more about how we rate challenges here.\nWhat is SSH? SSH (Secure SHell) is a protocol for securely transmitting commands to a remote computer. It makes it possible to access files, run commands, and more, just from inside the terminal. More information can be found here.\nDoing the challenge Pico already gives you the command to use. When you first log in, the directory you\u0026rsquo;re in has 1of3.flag.txt and instructions-to-2of3.txt. Clearly, the flag is split up into three different files. Use the cat command to view these files and follow the instructions to get the rest of the flag. Combine each of the files in order (1of3.flag.txt, 2of3.flag.txt, and 3of3.flag.txt) to get the flag!\n","date":"2021-04-02T16:46:31-06:00","permalink":"https://bmhstsa.com/post/magikarp-ground-mission/","title":"Magikarp Ground Mission"},{"content":"Challenge Rating  Artificialness: 2/10 Skill: 4/10 Time: 10 minutes  Learn more about how we rate challenges here.\nWhat software do you need? Any type of zip extraction, 7zip or WinRAR work fine.\nWhat do you need to know in order to solve it? The aspect of this challenge is hidden files inside image files.\nWhat do you actually do? Archive the original file with (in my case) WinRAR, then extract it. In the extracted file, you\u0026rsquo;ll find another file and so on, so forth. Continue the archive-extract until you find a text file which contains the flag.\n","date":"2021-04-02T16:32:39-06:00","permalink":"https://bmhstsa.com/post/matryoshka-doll/","title":"Matryoshka Doll"},{"content":"Challenge Rating  Artificialness: 3/10 Skill: 6/10 Time: 30 minutes (Assuming you already solved Web Gauntlet 2)  Learn more about how we rate challenges here.\nPreface This is the followup challenge to Web Gauntlet 2 which itself is a followup to Web Gauntlet. This article assumes you\u0026rsquo;ve already solved Web Gauntlet 2.\nWhat\u0026rsquo;s different? Not a whole lot - just the maximum user input length. Our previous exploit (admi'||CHAR(1540/LENGTH( and ))||') is 29 characters long. We only need to shave off 4 characters to be within the 25 character limit, that shouldn\u0026rsquo;t be too hard.\nCondensing our payload The first thing I noticed is that the bridged string ( AND password=) contains 1 of the characters in admin: a. Since SQLite also has a SUBSTR function, we can use that bridged text meaning we can eliminate CHAR(1540/LENGTH()). This leaves us with:\nSELECT username, password FROM users WHERE username=\u0026#39;\u0026#39;||substr(\u0026#39; AND password=\u0026#39;,7,1)||\u0026#39;dmin\u0026#39;; Now the total input is only 22 characters, 3 under the limit. Sweet! So if you set the username to '||substr( and the password to ,7,1)||'dmin, you should see the flag on filter.php.\n","date":"2021-03-31T00:32:29-06:00","permalink":"https://bmhstsa.com/post/web-gauntlet-3/","title":"Web Gauntlet 3"},{"content":"Challenge Rating  Artificialness: 3/10 Skill: 6/10 Time: 2-3 hours  Learn more about how we rate challenges here.\nPreface This is the followup challenge to Web Gauntlet.\nWhat are SQL injections? SQL injections occur when a server improperly handles user input in such a way that the user can write SQL queries and run them on the server. For example, lets say we\u0026rsquo;re running a simple web server that performs a username/password lookup:\nSELECT username, password FROM users WHERE username=\u0026#39;[USERNAME INPUT]\u0026#39; AND password=\u0026#39;[PASSWORD INPUT]\u0026#39;; Even if you don\u0026rsquo;t know SQL, you can probably figure out that we\u0026rsquo;re querying the database for users with a username equal to [USERNAME INPUT] and a password equal to [PASSWORD INPUT]. Well, say an attacker were to enter '. Just a single-quote. What do you think would happen? If the server was programmed correctly, it would escape the quote or filter it out resulting in the following query:\nSELECT username, password FROM users WHERE username=\u0026#39;\u0026#39;\u0026#39;\u0026#39; AND password=\u0026#39;[PASSWORD INPUT]\u0026#39;; Note: you escape single-quotes by doubling them up in SQLite.\nBut if the server simply concatenates or adds strings together to form a query such as with the below pseudocode:\n\u0026#34;SELECT username, password FROM users WHERE username=\u0026#39;\u0026#34; + username + \u0026#34;\u0026#39; AND password=\u0026#39;\u0026#34; + password + \u0026#34;\u0026#39;;\u0026#34; This would produce the following query:\nSELECT username, password FROM users WHERE username=\u0026#39;\u0026#39;\u0026#39; AND password=\u0026#39;[PASSWORD INPUT]\u0026#39;; Note: this is actually an invalid query but bare with me.\nNotice how the syntax highlighting is different than when the server properly escapes the single-quote? That\u0026rsquo;s because we now have a single string starting with an escaped quote ('' AND password=). This is called an injection vulnerability because a crafty attacker could format the username or password in such a way that when the server concatenates the user-input together, it generates a totally different, malicious query.\nSolving the challenge One important thing to note about this challenge is that our user-input cannot contain any of the following or and true false union like = \u0026gt; \u0026lt; ; -- /* */ admin (Which can be found on the filter.php page).\nSetting the username So first we need to figure out how to query the admin user without actually typing admin (Because it\u0026rsquo;s filtered). Luckily, SQLite (The flavor of SQL this challenge uses) supports string concatenation (Adding two or more strings together). So now we can type admin with the following for the username: admi'||'n which will turn into:\nSELECT username, password FROM users WHERE username=\u0026#39;admi\u0026#39;||\u0026#39;n\u0026#39; AND password=\u0026#39;[PASSWORD INPUT]\u0026#39;; Sweet!\nSetting the password We don\u0026rsquo;t know the password and this challenge isn\u0026rsquo;t about getting the password, so we need to get more creative - think about ways of removing the AND part of the query.\nRemember how earlier when the attacker entered a single-quote (') it generated an invalid SQL query because the string kind of bridged the 2 user inputs? Well if we do something with that string, then that eliminates the password= part of the query meaning we don\u0026rsquo;t have to guess or crack the password.\nMy solution is far from elegant but I decided to kill 2 birds with one stone by using the length of the bridged string using the SQLite LENGTH function in combination with the SQLite CHAR function to generate the n in admin via character codes.\nIn essence, the bridged string is  AND password= (14 characters long) and the ASCII character code for n is 110. So then I multiplied 14 by 110 which is 1540. Finally I concatenated an empty string at the end to make sure there wasn\u0026rsquo;t an unmatched single-quote. When the server executes the query, it will undo the multiplication and return the correct character code. I know this sounds confusing but it\u0026rsquo;s somewhat simple when you see it written out:\nSELECT username, password FROM users WHERE username=\u0026#39;admi\u0026#39;||CHAR(1540/LENGTH(\u0026#39; AND password=\u0026#39;))||\u0026#39;\u0026#39;; So if you set the username to admi'||CHAR(1540/LENGTH( and the password to ))||', you should see the flag on filter.php. Again, not the most elegant solution. If you want to see a more elegant solution, check out the sequel to this challenge, Web Gauntlet 3.\n","date":"2021-03-30T23:26:46-06:00","permalink":"https://bmhstsa.com/post/web-gauntlet-2/","title":"Web Gauntlet 2"},{"content":"Challenge Rating  Artificialness: 5/10 Skill: 3/10 Time: 5 minutes  Learn more about how we rate challenges here.\nWhat are HTTP verbs? Normally when you access a website, your browser makes an HTTP request to GET content from the server. However, your browser isn\u0026rsquo;t always fetching data from a server, sometimes it POSTs data too (Such as when logging in to a website). HTTP verbs are the standardized method for telling the server what to do. The most common HTTP verbs are:\n GET: fetch data from a server (eg: retrieve an HTML file) HEAD: check what the server will do before making a GET request (eg: check response size before fetching something) POST: post data to a server (eg: log in to a website) PUT: update an existing resource DELETE: delete a resource  Solving the challenge Although the Get in Get Ahead may throw you off, remember that web browsers make GET requests by default so this challenge may be a little too easy if all you had to do was just visit the link with a browser and open the inspector. Instead, focus on the Ahead part - as in a HEAD request. If you use a tool such as Postman, this is fairly easy to do: Please note that the flag is a header, not the response body.\n","date":"2021-03-30T22:38:13-06:00","permalink":"https://bmhstsa.com/post/get-ahead/","title":"Get Ahead"},{"content":"We rank CTF challenges on the following metrics:\n Artificialness Skill Time  Artificialness This metric measures how contrived or artificial a challenge is. This metric is measured on a scale from 1 to 10 where 1 represents a very realistic challenge while a 10 represents a very artificial challenge.\nSkill This metric measures how much skill a challenge requires to solve. If multiple ways of solving a challenge are available, this metrics should reflect the easiest one. This metric is also measured on a scale from 1 to 10 where 1 represents a challenge a complete novice could solve and a 10 represents a challenge only subject experts could solve.\nTime This metric measures how much time a challenge requires to solve on the first time without any outside help. This metric is measured in hours and minutes.\n","date":"2021-03-30T22:31:14-06:00","permalink":"https://bmhstsa.com/post/rating/","title":"Rating"}]